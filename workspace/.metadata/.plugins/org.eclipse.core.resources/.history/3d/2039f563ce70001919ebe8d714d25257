package chess;

import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;

public class Driver {
	
	public static void testChess() {
		JFrame frame = new JFrame("Chess");
		JPanel mainPanel = new JPanel();
		JLabel label = new JLabel();
		Board board = new Board(label, 64);
		
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		label.setFont(new Font(label.getFont().getName(), Font.BOLD, 64 / 2));
		
		mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
		mainPanel.add(board);
		mainPanel.add(label);
		frame.add(mainPanel);
		
		List<GamePiece> pieces = new ArrayList<GamePiece>();
		boolean[] tf = { true, false };
		
		GamePiece.setMasterPanel(mainPanel);
		
		for (boolean team : tf) {
			for (int i = 0; i < 8; i++)
				pieces.add(new Pawn(i, team));
			for (boolean right : tf) {
				pieces.add(new Rook(right, team));
				pieces.add(new Knight(right, team));
				pieces.add(new Bishop(right, team));
			}
			pieces.add(new Queen(team));
			pieces.add(new King(team));
		}
		
		
		GamePiece[] gamePieces = pieces.toArray(new GamePiece[0]);
		board.updateBoard(gamePieces);
		frame.setVisible(true);
		frame.pack();
	}
	
	public static void main(String[] args) throws Exception {
		//System.out.println("TODO: Remove all testchecks from getmoves");
		//System.exit(1);		
		testChess();
		int[] arr = {1, 2, 3, 4, 5, 6, 7};
		for (int i = 3; i < arr.length - 1; i++) {
			arr[i] = arr[i + 1];
		}
		for (int i = 0; i < arr.length; i++) {
			System.out.println(arr[i]);
		}
		/*
		JFrame frame = new JFrame("Chess");
		JPanel mainPanel = new JPanel();
		JLabel label = new JLabel();
		Board board = new Board(label, 64);
		
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		label.setFont(new Font(label.getFont().getName(), Font.BOLD, 64 / 2));
		
		mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
		mainPanel.add(board);
		mainPanel.add(label);
		frame.add(mainPanel);
		
		List<GamePiece> pieces = new ArrayList<GamePiece>();
		
		GamePiece.setMasterPanel(mainPanel);
		
		pieces.add(new King(true));
		pieces.add(new King(false));
		pieces.add(new Pawn(2, 6, false));
		pieces.add(new Rook(0, 7, true));
		
		
		GamePiece[] gamePieces = pieces.toArray(new GamePiece[0]);
		board.updateBoard(gamePieces);
		frame.setVisible(true);
		frame.pack();
		*/
	}

}
